### Province vs points
x.us <- nest(group_by(wine.US, province))
x.us <- x.us %>% mutate(median=map_dbl(data, function(x) median(x$points))) %>% as.data.frame
# Calculate median for each province
province.median.order <- na.omit(x.us$province[order(x.us$median, decreasing = TRUE)])
wine.US$province <- factor(wine.US$province, levels=province.median.order)
# Order levels of province by median
ggplot(wine.US, aes(x=province, y=points)) + geom_boxplot() + coord_flip() + ggtitle("Boxplot of wine variety aganist points") + theme(plot.title = element_text(hjust = 0.5))
wine.US$i_points
wine.US$i_points <- factor(wine.US$i_points, levels=0:1)
fit.log <- glm(i_points ~ log(price) + variety + province, family=binomial, wine.US) # This model was the best model based on the forward selection above
fit.log <- glm(i_points ~ log(price) + variety + province, family=binomial, wine.US) # This model was the best model based on the forward selection above
summary(fit.log)
sqrt(0.1*0.9/10000 )
fit <- lm(HealthScore ~ Quarter + Age + HospitalVisit, scores)
library(tidyr) # nest
library(dplyr) # group_by, mutate
library(purrr) # map_dbl
library(ggplot2)
library(gpairs)
library(trelliscopejs) # map_plot
## 1. Loading the data
setwd("~/Documents/Master1-1/Internship/Acumen")
rawdata <- read_xlsx("Acumen_Data_Analysis_Exercise_Data.xlsx")
scores <- as.data.frame(rawdata)
# Data cleaning
scores$Quarter <- as.factor(scores$Quarter)
scores$Sex <- as.factor(scores$`Sex (Male=1)`)
levels(scores$Sex) <- c("F", "M")
scores$Race <- as.factor(scores$Race)
scores$`Hospital Visit This Quarter (1=Yes)` <- as.factor(scores$`Hospital Visit This Quarter (1=Yes)`)
## 2. Understanding the data
##  a) Are all the values in the data reasonable? Are there missing values?
summary(scores)
# Check the distribution of health scores
hist(scores$`Health Score`, main="Histogram of health scores") # There is score 10 in additional to health score 0-6 as specified.
# Group the data by 12 quarters
s1 <- nest(group_by(scores, Quarter))
# Check emplyee ID in each quarter
lapply(s1$data, function(x) summary(x$'Employee Id'))
lapply(s1$data, function(x) length(x$'Employee Id')) # There are health scores missing in most of quarters, especially the first two quarters.
s1 <- s1 %>% mutate(Employees=map_dbl(data, nrow))
# Check health scores in each quarter
lapply(s1$data, function(x) summary(x$'Health Score')) # Score 10 can be seen in each quarter, which might affect the results
lapply(s1$data, function(x) sum(x$'Health Score'==10)) # Number of unexpected score 10 is increasing with quarters, possibly pulling up the mean scores.
s1 <- s1 %>% mutate(score10=map_dbl(data, function(x) sum(x$'Health Score'==10)))
s1$score10pert <- round(s1$score10/s1$Employees, 2)
data.frame(Number=s1$score10, Proportion=s1$score10pert)
par(mfrow=c(4,3), mar=c(4,4,2,1))
lapply(1:12, function(x) hist(s1$data[[x]]$`Health Score`,
main=paste("Quarter", x), cex.main=1, xlab=NULL)) # There are ages greater than 100 since quarter 5
dev.off()
# Delete record with score 10
scores <- scores[which(scores$`Health Score` !=10), ]
# Number of missing values
sum(is.na(scores))
##  b) What are the characteristics of employees at Company A? Do these demographics change over time?
##  Use tables and charts to understand the data and demographic characteristics of employees at Company A.
summary(scores)
# Sex
plot(table(scores$Quarter, scores$Sex), main="Plot of sex distribution in 12 quarters") # Normal
# Race
plot(table(scores$Quarter, scores$Race), main="Plot of race distribution in 12 quarters") # Normal
# Age
par(mfrow=c(4,3), mar=c(4,4,2,1))
lapply(1:12, function(x) hist(s1$data[[x]]$Age,
main=paste("Histogram of age \n in quarter", x), cex.main=1, xlab=NULL)) # There are ages greater than 100 since quarter 5
dev.off()
scores <- scores[which(scores$Age < 100),]
s1 <- s1 %>% mutate(Mean.age=map_dbl(data, function(x) mean(x$Age)))
plot(1:12, s1$Mean.age, xlab="Quarters", ylab="Mean age")
# Hospital visit
plot(table(scores$Quarter, scores$"Hospital Visit This Quarter (1=Yes)"), main="Plot of hospital visit in 12 quarters") # Proportion of hospital visit is increasing
# Salary
par(mfrow=c(4,3), mar=c(4,4,2,1))
lapply(1:12, function(x) hist(s1$data[[x]]$Salary,
main=paste("Histogram of salary \n in quarter", x), cex.main=1, xlab=NULL)) # Normal
dev.off()
plot(scores$Quarter, scores$Salary, xlab="Quarters", ylab="Salary")
names(scores) <- c("ObservationNumber","Quarter","EmployeeId","Sex (Male=1)","Race","Age","HospitalVisit","Salary","HealthScore","Sex")
scores$Quarter <- as.numeric(scores$Quarter)
fit <- lm(HealthScore ~ Quarter + Age + HospitalVisit, scores)
summary(fit)
library(tidyr) # nest
library(dplyr) # group_by, mutate
library(purrr) # map_dbl
library(ggplot2)
library(gpairs)
library(trelliscopejs) # map_plot
## 1. Loading the data
setwd("~/Documents/Master1-1/Internship/Acumen")
rawdata <- read_xlsx("Acumen_Data_Analysis_Exercise_Data.xlsx")
scores <- as.data.frame(rawdata)
# Data cleaning
scores$Quarter <- as.factor(scores$Quarter)
scores$Sex <- as.factor(scores$`Sex (Male=1)`)
levels(scores$Sex) <- c("F", "M")
scores$Race <- as.factor(scores$Race)
scores$`Hospital Visit This Quarter (1=Yes)` <- as.factor(scores$`Hospital Visit This Quarter (1=Yes)`)
## 2. Understanding the data
##  a) Are all the values in the data reasonable? Are there missing values?
summary(scores)
# Check the distribution of health scores
hist(scores$`Health Score`, main="Histogram of health scores") # There is score 10 in additional to health score 0-6 as specified.
# Group the data by 12 quarters
s1 <- nest(group_by(scores, Quarter))
# Check emplyee ID in each quarter
lapply(s1$data, function(x) summary(x$'Employee Id'))
lapply(s1$data, function(x) length(x$'Employee Id')) # There are health scores missing in most of quarters, especially the first two quarters.
s1 <- s1 %>% mutate(Employees=map_dbl(data, nrow))
# Check health scores in each quarter
lapply(s1$data, function(x) summary(x$'Health Score')) # Score 10 can be seen in each quarter, which might affect the results
lapply(s1$data, function(x) sum(x$'Health Score'==10)) # Number of unexpected score 10 is increasing with quarters, possibly pulling up the mean scores.
s1 <- s1 %>% mutate(score10=map_dbl(data, function(x) sum(x$'Health Score'==10)))
s1$score10pert <- round(s1$score10/s1$Employees, 2)
data.frame(Number=s1$score10, Proportion=s1$score10pert)
par(mfrow=c(4,3), mar=c(4,4,2,1))
lapply(1:12, function(x) hist(s1$data[[x]]$`Health Score`,
main=paste("Quarter", x), cex.main=1, xlab=NULL)) # There are ages greater than 100 since quarter 5
dev.off()
# Delete record with score 10
scores <- scores[which(scores$`Health Score` !=10), ]
# Number of missing values
sum(is.na(scores))
##  b) What are the characteristics of employees at Company A? Do these demographics change over time?
##  Use tables and charts to understand the data and demographic characteristics of employees at Company A.
summary(scores)
# Sex
plot(table(scores$Quarter, scores$Sex), main="Plot of sex distribution in 12 quarters") # Normal
# Race
plot(table(scores$Quarter, scores$Race), main="Plot of race distribution in 12 quarters") # Normal
# Age
par(mfrow=c(4,3), mar=c(4,4,2,1))
lapply(1:12, function(x) hist(s1$data[[x]]$Age,
main=paste("Histogram of age \n in quarter", x), cex.main=1, xlab=NULL)) # There are ages greater than 100 since quarter 5
dev.off()
scores <- scores[which(scores$Age < 100),]
s1 <- s1 %>% mutate(Mean.age=map_dbl(data, function(x) mean(x$Age)))
plot(1:12, s1$Mean.age, xlab="Quarters", ylab="Mean age")
# Hospital visit
plot(table(scores$Quarter, scores$"Hospital Visit This Quarter (1=Yes)"), main="Plot of hospital visit in 12 quarters") # Proportion of hospital visit is increasing
# Salary
par(mfrow=c(4,3), mar=c(4,4,2,1))
lapply(1:12, function(x) hist(s1$data[[x]]$Salary,
main=paste("Histogram of salary \n in quarter", x), cex.main=1, xlab=NULL)) # Normal
dev.off()
plot(scores$Quarter, scores$Salary, xlab="Quarters", ylab="Salary")
## 3. Evaluating the claim
##  a) Which characteristics are associated with the health score?
##  Use tables and charts (suggestion: scatter plots for continuous variables) to determine which characteristics are associated with the health score.
plot(scores$Sex, scores$`Health Score`, main="Boxplot of health scores for two genders") # Associated?
plot(scores$Race, scores$`Health Score`, main="Boxplot of health scores for three races") # Not associated
plot(scores$Age, scores$`Health Score`, main="Scatterplot of health scores \n against employee's age") # Associated?
plot(scores$`Hospital Visit This Quarter (1=Yes)`, scores$`Health Score`, main="Boxplot of health scores \n for employees with (=1) \n or without (=0) hospital visit") # Associated
plot(scores$Salary, scores$`Health Score`, main="Scatterplot of health scores \n against employee's salary") # Not associated
## 4. Exploring relationships
##  a) Using the information from Questions 1 and 2, describe how you would evaluate InsurAHealth's claim that employees are getting sicker.
##  First list how you would evaluate the claim. Then, time-permitting, implement the steps you suggested.
# Estimated the overall trend of scores with quarters
plot(scores$Quarter, scores$`Health Score`, main="Boxplot of health scores for each quarter")
# Analyze the trend of scores with respect to characteristics that might influence the scores: sex, age, hospital visit
# a. Sex
scores.F <- scores[which(scores$Sex=="F"),]
scores.M <- scores[which(scores$Sex=="M"),]
par(mfrow=c(2,1), mar=c(4,4,2,1))
plot(scores.F$Quarter, scores.F$`Health Score`, main="Boxplot of health scores \n of female employees for each quarter")
plot(scores.M$Quarter, scores.M$`Health Score`, main="Boxplot of health scores \n of male employees for each quarter")
# b. Age
scores.age1 <- scores[which(scores$Age <=10),]
scores.age2 <- scores[which(scores$Age > 10 & scores$Age <=20),]
scores.age3 <- scores[which(scores$Age > 20 & scores$Age <=30),]
scores.age4 <- scores[which(scores$Age > 30 & scores$Age <=40),]
scores.age5 <- scores[which(scores$Age > 40 & scores$Age <=50),]
scores.age6 <- scores[which(scores$Age > 50 & scores$Age <=60),]
scores.age7 <- scores[which(scores$Age > 60 & scores$Age <=70),]
scores.age8 <- scores[which(scores$Age > 70 & scores$Age <=80),]
scores$Age.ind <- ceiling(scores$Age/20)
s2 <- nest(group_by(scores, Age.ind))
s2 <- s2 %>% mutate(plot=map_plot(data, function(x)
ggplot(x, aes(x=Quarter, y=`Health Score`))+geom_boxplot()+
ggtitle(paste("Boxplot of health scores of employees aged", 20*s2$Age.ind, "for each quarter"))))
par(mfrow=c(4,3), mar=c(4,4,2,1))
plot(scores.age1$Quarter, scores.age1$`Health Score`, main="Boxplot of health scores \n of female employees for each quarter")
plot(scores.age2$Quarter, scores.age2$`Health Score`, main="Boxplot of health scores \n of male employees for each quarter")
plot(scores.age3$Quarter, scores.age3$`Health Score`, main="Boxplot of health scores \n of female employees for each quarter")
plot(scores.age4$Quarter, scores.age4$`Health Score`, main="Boxplot of health scores \n of male employees for each quarter")
plot(scores.visit$Quarter, scores.visit$`Health Score`, main="Boxplot of health scores \n of female employees for each quarter")
plot(scores.novisit$Quarter, scores.novisit$`Health Score`, main="Boxplot of health scores \n of male employees for each quarter")
plot(scores.visit$Quarter, scores.visit$`Health Score`, main="Boxplot of health scores \n of female employees for each quarter")
plot(scores.novisit$Quarter, scores.novisit$`Health Score`, main="Boxplot of health scores \n of male employees for each quarter")
# c. Hospital visit
scores.visit <- scores[which(scores$`Hospital Visit This Quarter (1=Yes)`==1),]
scores.novisit <- scores[which(scores$`Hospital Visit This Quarter (1=Yes)`==0),]
plot(scores.visit$Quarter, scores.visit$`Health Score`, main="Boxplot of health scores \n of female employees for each quarter")
plot(scores.novisit$Quarter, scores.novisit$`Health Score`, main="Boxplot of health scores \n of male employees for each quarter")
dev.off()
names(scores) <- c("ObservationNumber","Quarter","EmployeeId","Sex (Male=1)","Race","Age","HospitalVisit","Salary","HealthScore","Sex")
scores$Quarter <- as.numeric(scores$Quarter)
fit <- lm(HealthScore ~ Quarter + Age + HospitalVisit, scores)
summary(fit)
"qrpgle.kyicrpylg"+2
as.numeric("qrpgle.kyicrpylg")+2
2^38
knitr::opts_chunk$set(echo = TRUE) # Put things you anticipated that you would need
library(MASS)
head(Boston)
?Boston
# Run the chunk by the green triangle or command+return
library(MASS)
head(Boston)
?Boston
?Boston
?Boston
plot(Boston) # This plots pairwise relationships of all variables
plot(Boston) # This plots pairwise relationships of all variables
plot(Boston[,c(14, 1, 4, 7, 11)]) # Plot a subset instead by indicating columns I want
plot(Boston[,c(14, 1, 4, 7, 11)]) # Plot a subset instead by indicating columns I want
plot(Boston[,c(14, 1, 4, 7, 11, 13)]) # Plot a subset instead by indicating columns I want
plot(Boston[,c(14, 1, 4, 7, 11, 13)]) # Plot a subset instead by indicating columns I want
plot(Boston[,c(14, 1, 7, 11, 13)]) # Plot a subset instead by indicating columns I want
plot(Boston[,c(14, 1, 7, 11, 13)]) # Plot a subset instead by indicating columns I want
m1 <- lm(medv ~ lstat, data=Boston)
summary(m1)
resid(m1)
hist(resid(m1))
qqnorm(resid(m1))
plot(resid(m1) ~ fitted(m1))
m2 <- lm(medv ~ log(lstat), data=Boston)
qqnorm(resid(m2))
plot(resid(m2) ~ fitted(m2))
summary(m2)
m3 <- lm(medv ~ log(lstat) + age, data=Boston)
summary(m3) # R^2 increased
m4 <- lm(medv ~ ., data=Boston) # .: all predictors in the dataset
summary(m4)
m4 <- lm(medv ~ . - lstat + log(lstat), data=Boston) # can minus and plus predictors
summary(m4)
4.99x0.6
4.99*0.6
1060.62-1126.26
1110.98-1203.72
1364.38+188.75
1364.38+188.75-(94.7-2.62)
(94.7-2.62)
(94.7-2.62)+1461.05+650.86-1230.03
(94.7-2.62)+1461.05+650.86
1461+92
Y
ls()
a <- "Old MacDonald had a Farm"
b <- "01313"
a
b
mode(a)
mode(b)
as.numeric(a)
as.numeric(b)
a
b
alpha <- c(a, b)
alpha
mode(alpha)
beta <- c(alpha, a, b, alpha)
beta
song1 <- paste(a, b)
song1
song2 <- c(a, b)
song2
length(song1)
length(song2)
1:4
seq(1, 4, 1)
seq(1, 10, 2)
onethrufour <- 1:4
onethrufour
val1 <- 1
val2 <- "a"
val3 <- TRUE
mode(val1)
mode(val2)
mode(val3)
9 < "Cow"
"9" < "Cow"
"ABC" < "ABB"
"ABC" < "ABD"
"9" < "Cow"
9 < "Cow"
1 + "Hippo"
val1 + val2
c(val1, val2)
val1 + val3
val1 == val3
a <- c(val1, val3)
b <- c(val1, val3, val2)
a
b
c(a, val2)
keepvalues <- list()
keepvalues
keepvalues$a <- val1
keepvalues$b <- val2
keepvalues$c <- val3
keepvalues
keepvalues[[1]]
keepvalues[[2]]
keepvalues[[3]]
keepvalues[[1]] == a[1]
keepvalues[[1]] == "1"
ls()
rm(a)
rm(b)
ls()
list = ls()
list
rm(list = ls())
ls()
x <- c(1, 2, 5, 8, 10)
y <- c(5, 5, 5, 3, 9)
cbind(x, y)
z <- rbind(x, y, y, y)
z
x + y
x / y
x * y
x
length(x)
log(x)
max(x)
which.min(x)
x[1]
x[2]
x[c(3, 4)]
x[c(TRUE,TRUE,FALSE,FALSE,TRUE)]
x[c(1,1,0,0,1)]
z
dim(z)
z[1, 2]
z[1, ]
z[, 3]
z[2:3, ]
z[2:3, 1:4]
z[1:3, 1:3] <- 24601
z
our.data <- data.frame(alpha = c(1, 2, 4, 5)) # give it the first column
our.data
our.data$beta <- c(3, 4, 3, 4)
our.data
our.data$gamma <- c("q", "wer", "ty", " ")
our.data
our.data$lambda <- c(1, 2)
our.data
our.data$lambda <- 1
our.data
n <- 100000
normals <- rnorm(n, 0, 1)
length(normals)
normals[1:100]
mode(normals)
roundnormals <- round(normals, 3)
roundnormals[1:100]
round(normals, 3)[1:100]
runif(5)
runif(5)
beforerng <- .Random.seed
runif(5)
afterrng <- .Random.seed
rbind(beforerng, afterrng)
.Random.seed
beforerng <- .Random.seed
beforerng
runif(5)
afterrng <- .Random.seed
rbind(beforerng, afterrng)
afterrng - beforerng
table(afterrng - beforerng)
beforerng <- .Random.seed
runif(4)
afterrng <- .Random.seed
table(afterrng - beforerng)
?.Random.seed
?runif
set.seed(beforerng)
runif(4)
set.seed(beforerng)
runif(4)
set.seed(beforerng)
runif(4)
set.seed(123)
.Random.seed
runif(4)
set.seed(123)
runif(4)
combinations <- combn(5, 3)
?combn
combinations
dim(combinations)
combn
dim(combn)
c(combn, combn)
runif
rnorm
myfunction <- function(x) {
xtemp <- x + 1
return(xtemp)
}
myfunction
myfunction(0)
# Can iterate the same function over and over.
avector <- c(1,2,8,-10)
avector
avector <- myfunction(avector)
avector
avector <- myfunction(avector)
avector
avector <- myfunction(avector)
avector
listoffunctions <- list()
listoffunctions$a <- myfunction
listoffunctions$a
listoffunctions$a(1)
listoffunctions$a(3079)
?ifelse
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
head(Boston)
?Boston
knitr::opts_chunk$set(echo = TRUE)
library(MASS)
head(Boston)
?Boston
plot(Boston[,c(14, 1, 7, 11, 13)])
m1 <- lm(medv ~ lstat, data=Boston)
summary(m1)
resid(m1)
hist(resid(m1))
qqnorm(resid(m1))
plot(resid(m1) ~ fitted(m1))
m2 <- lm(medv ~ log(lstat), data=Boston)
qqnorm(resid(m2))
plot(resid(m2) ~ fitted(m2))
summary(m2)
m3 <- lm(medv ~ log(lstat) + age, data=Boston)
summary(m3)
m4 <- lm(medv ~ . -lstat + log(lstat), data=Boston)
summary(m4)
?Boston
set.seed(123) # IMPORTANT!
?sample
1:nrow(Boston)
s <- sample(1:nrow(Boston), nrow(Boston)/2, replace = FALSE)
s
-s
test <- Boston[-s,] # Anything other than the s set
train <- Boston[s,]
f1 <- fitted(m1)
f1
cor(fitted(m1), train$medv)^2
m1 <- lm(medv ~ log(lstat) + age, data=train)
summary(m1)
f1 <- fitted(m1)
f1
cor(fitted(m1), train$medv)^2
p1 <- predict(m1, newdata=train)
head(f1)
head(p1)
identical(f1, p1)
sum(abs(f1-p1))
m2 <- lm(medv ~ tax + log(lstat) + age, data=train)
summary(m2)
hist(train$tax)
train$taxlvl <- cut(train$tax, breaks = c(0, 300, 600, 1000))
test$taxlvl <- cut(test$tax, breaks = c(0, 300, 600, 1000))
levels(train$taxlvl)
levels(test$taxlvl)
levels(test$tax)
levels(test$taxlvl)
contrasts(train$taxlvl)
m3 <- lm(medv ~ taxlvl + log(lstat) + age, data=train)
levels(test$taxlvl)
class(test$tax)
class(test$taxlvl)
m3 <- lm(medv ~ taxlvl + log(lstat) + age, data=train) # Regions with higher taxes tend to lowere housing values
summary(m3)
contrasts(train$taxlvl)
anova(m3)
m3 <- lm(medv ~ taxlvl + log(lstat) + age, data=train) # Regions with higher taxes tend to lowere housing values
summary(m3)
anova(m3) # To get single p-values for single variables
m4 <- lm(medv ~ taxlvl * log(lstat) + age, data=train)
summary(m4)
anova(m4)
anova(m3, m4)
anova(m2, m4) # not nested, no warning message! don't interpret results
anova(m1, m4)
test
p1 <- predict(m1, newdata=test) # predictions for unseen data
p2 <- predict(m2, newdata=test) # predictions for unseen data
p3 <- predict(m3, newdata=test) # predictions for unseen data
p4 <- predict(m4, newdata=test) # predictions for unseen data
mean((p1-test$medv)^2)
mean((p2-test$medv)^2)
mean((p3-test$medv)^2)
mean((p4-test$medv)^2)
qnorm(0.8)
qnorm(0.95)
qnorm(0.975)
(1.96+0.84)^2
log(0.2231)/log(0.3679)
log(0.3679)/log(0.2231)
2.779/0.979
2.997/0.979
0.6734/(0.6734+0.2767)
